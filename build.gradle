plugins {
    id 'java'
    id 'io.quarkus'
    id "com.palantir.docker" version "0.22.1"
    id "com.palantir.docker-run" version "0.22.1"
}

ext {
    repo = System.getenv('ECR_URL')
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-resteasy-jackson'
    implementation 'io.quarkus:quarkus-resteasy'
    implementation 'io.quarkus:quarkus-arc'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
}

group 'com.traackr'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

docker {
    name "${project.name}:${version}"
    tag "-${version}", "${repo}${project.name}:${version}"
    copySpec.from("../${project.name}").into(project.name)
    buildArgs(['ECR_REPO_ARG': (repo.split("/"))[0], 'ECR_USER_ARG': (repo.split("/"))[1]  , 'PROJECT_NAME': project.name])
    dockerfile file('docker/Dockerfile')
    pull true
    noCache true
}

dockerRun {
    name "${project.name}"
    image "${project.name}:${project.version}"
    ports '8080:8080'
    clean true
}